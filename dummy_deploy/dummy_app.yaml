apiVersion: v1
# Services are internal load balancers
kind: Service
metadata:
  name: dummyapp
  labels:
    app: dummyapp
spec:
  ports:
    - port: 80
  selector:
    app: dummyapp
    tier: frontend
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dummyapp-pv-claim
  labels:
    app: dummyapp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummyapp
  labels:
    app: dummyapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dummyapp
      tier: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: dummyapp
        tier: frontend
    spec:
      containers:
      - image: dummyapp:develop.latest
        # imagePullPolicy: Always  # Don't use this if we're manually loading images into kind
        name: dummyapp
        env:
        - name: HELLO_WORLD_VALUE
          value: "hi world"
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: dummy-username-password
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: dummy-username-password
              key: password
        ports:
        - containerPort: 80
          name: dummyapp
        volumeMounts:
        - name: dummyapp-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: dummyapp-persistent-storage
        persistentVolumeClaim:
          claimName: dummyapp-pv-claim
